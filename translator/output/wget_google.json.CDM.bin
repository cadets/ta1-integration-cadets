Objavro.schema¦ü{"doc": "* A record representing either a vertex or an edge. This is the top level record that allows\n     * us to easily mix the vertices and edges defined above on the wire.", "namespace": "com.bbn.tc.schema.avro", "name": "TCCDMDatum", "fields": [{"type": [{"doc": "* A provenance tag defines source dependence on specific data sources (inputs).\n     * A tag identifier is typically bound to a source and used by the tracking system to\n     * capture dependence on this source input.\n     * A provenance tag is represented as a tree. Each node in the tree has a value and\n     * a set of children nodes.", "namespace": "com.bbn.tc.schema.avro", "name": "ProvenanceTagNode", "fields": [{"doc": "*  the value of the node: can have the following types\n         *   int                 references another node by tagId\n         *   UUID                object uuid (source or sink for example)\n         *   TaOpCode            the opcode applied to the children nodes, see TaOpCode\n         *   IntegrityTag        an integrity tag\n         *   ConfidentialityTag  a confidentiality tag", "type": ["int", {"namespace": "com.bbn.tc.schema.avro", "type": "fixed", "name": "UUID", "size": 32}, {"symbols": ["TAG_OP_SEQUENCE", "TAG_OP_UNION", "TAG_OP_ENCODE", "TAG_OP_STRONG", "TAG_OP_MEDIUM", "TAG_OP_WEAK"], "namespace": "com.bbn.tc.schema.avro", "type": "enum", "name": "TagOpCode", "doc": "* The tag opcode describes the provenance relation i.e., how multiple sources are combined to\n     * produce the output. We identify the following provenance relations\n     *\n     *   TAG_OP_SEQUENCE       the output is derived from the specified inputs in order, sequentially\n     *   TAG_OP_UNION,         the output is the union of its inputs\n     *   TAG_OP_ENCODE         the output is some encoding of the input\n     *   TAG_OP_STRONG         this is more qualitative (coarse) saying there is strong dependence\n     *   TAG_OP_MEDIUM         this is more qualitative (coarse) saying there is medium dependence\n     *   TAG_OP_WEAK           this is more qualitative (coarse) saying there is weak   dependence"}, {"symbols": ["INTEGRITY_UNTRUSTED", "INTEGRITY_BENIGN", "INTEGRITY_INVULNERABLE"], "namespace": "com.bbn.tc.schema.avro", "type": "enum", "name": "IntegrityTag", "doc": "* The integrity tag may be used to specify the initial integrity of an entity,\n     * or to endorse its content after performing appropriate checking/sanitization."}, {"symbols": ["CONFIDENTIALITY_SECRET", "CONFIDENTIALITY_SENSITIVE", "CONFIDENTIALITY_PRIVATE", "CONFIDENTIALITY_PUBLIC"], "namespace": "com.bbn.tc.schema.avro", "type": "enum", "name": "ConfidentialityTag", "doc": "* The confidentiality tag may be used to specify the initial confidentiality of an entity,\n     * or to declassify its content after performing appropriate checking/sanitization."}], "name": "value"}, {"default": null, "doc": "the child nodes", "type": ["null", {"items": "com.bbn.tc.schema.avro.ProvenanceTagNode", "type": "array"}], "name": "children"}, {"default": null, "doc": "* the id to be assigned to this tag node\n         * typically set once when the node is first created, and used in value afterwards", "type": ["null", "int"], "name": "tagId"}, {"default": null, "doc": "Arbitrary key, value pairs associated with a tag node", "type": ["null", {"type": "map", "values": "string"}], "name": "properties"}], "type": "record"}, {"doc": "* Subjects represent execution contexts and include mainly threads and processes.\n     * They can be more granular and can represent other execution boundaries such as\n     * functions and blocks if needed.", "namespace": "com.bbn.tc.schema.avro", "name": "Subject", "fields": [{"doc": "universally unique identifier for the subject", "type": "com.bbn.tc.schema.avro.UUID", "name": "uuid"}, {"doc": "the subject type", "type": {"symbols": ["SUBJECT_PROCESS", "SUBJECT_THREAD", "SUBJECT_UNIT"], "namespace": "com.bbn.tc.schema.avro", "type": "enum", "name": "SubjectType", "doc": "* SUBJECT_PROCESS,    process\n     * SUBJECT_THREAD,     thread within a process\n     * SUBJECT_UNIT        so far we only know of TRACE BEEP using this"}, "name": "type"}, {"doc": "OS process id for type process and unit id for a unit (Optional)", "type": "int", "name": "pid"}, {"doc": "OS parent process id for type process and pid for type unit (Optional)", "type": "int", "name": "ppid"}, {"doc": "Where it came from, see InstrumentationSource", "type": {"symbols": ["SOURCE_LINUX_AUDIT_TRACE", "SOURCE_LINUX_PROC_TRACE", "SOURCE_LINUX_BEEP_TRACE", "SOURCE_FREEBSD_OPENBSM_TRACE", "SOURCE_ANDROID_JAVA_CLEARSCOPE", "SOURCE_ANDROID_NATIVE_CLEARSCOPE", "SOURCE_FREEBSD_DTRACE_CADETS", "SOURCE_FREEBSD_TESLA_CADETS", "SOURCE_FREEBSD_LOOM_CADETS", "SOURCE_FREEBSD_MACIF_CADETS", "SOURCE_WINDOWS_DIFT_FAROS"], "namespace": "com.bbn.tc.schema.avro", "type": "enum", "name": "InstrumentationSource", "doc": "* SOURCE_LINUX_AUDIT_TRACE,          from Linux /dev/audit\n     * SOURCE_LINUX_PROC_TRACE,           from Linux's /proc\n     * SOURCE_LINUX_BEEP_TRACE,           from BEEP instrumentation\n     * SOURCE_FREEBSD_OPENBSM_TRACE,      from FreeBSD openBSM\n     * SOURCE_ANDROID_JAVA_CLEARSCOPE,    from android java instrumentation\n     * SOURCE_ANDROID_NATIVE_CLEARSCOPE,  from android's native instrumentation\n     * SOURCE_FREEBSD_DTRACE_CADETS, SOURCE_FREEBSD_TESLA_CADETS  for CADETS freebsd instrumentation\n     * SOURCE_FREEBSD_LOOM_CADETS, SOURCE_FREEBSD_MACIF_CADETS    for CADETS freebsd instrumentation\n     *"}, "name": "source"}, {"doc": "* The start time of the subject\n         * A timestamp stores the number of microseconds from the unix epoch, 1 January 1970 00:00:00.000000 UTC.", "type": "long", "name": "startTimestampMicros"}, {"default": null, "doc": "unit id for unit based instrumentation (Optional)", "type": ["null", "int"], "name": "unitId"}, {"default": null, "doc": "The end time of the subject (Optional)", "type": ["null", "long"], "name": "endTimestampMicros"}, {"default": null, "doc": "Process command line arguments including process name (Optional)", "type": ["null", "string"], "name": "cmdLine"}, {"default": null, "doc": "imported libraries (static or dynamic), (Optional)", "type": ["null", {"items": "string", "type": "array"}], "name": "importedLibraries"}, {"default": null, "doc": "exported libraries (static or dynamic), (Optional)", "type": ["null", {"items": "string", "type": "array"}], "name": "exportedLibraries"}, {"default": null, "doc": "additional process information, such portable execution (PE) info in windows (Optional)", "type": ["null", "string"], "name": "pInfo"}, {"default": null, "doc": "Arbitrary key, value pairs describing the entity", "type": ["null", {"type": "map", "values": "string"}], "name": "properties"}], "type": "record"}, {"doc": "* Events represent actions executed on behalf of subjects. Events could include system calls,\n     * function calls, instruction executions, or even more abstract notions representing a blind execution\n     * such as black boxes that are not instrumented (more shortly). Events are the core entity in the model\n     * and they are the main abstraction for representing information flow between data objects, and subjects.\n     * Events are atomic and immutable.", "namespace": "com.bbn.tc.schema.avro", "name": "Event", "fields": [{"doc": "A universally unique identifier for the event", "type": "com.bbn.tc.schema.avro.UUID", "name": "uuid"}, {"default": 0, "doc": "A logical sequence number for ordering events relative to each other within a subject's execution context", "type": "long", "name": "sequence"}, {"doc": "The type of the event", "type": {"symbols": ["EVENT_ACCEPT", "EVENT_BIND", "EVENT_CHANGE_PRINCIPAL", "EVENT_CHECK_FILE_ATTRIBUTES", "EVENT_CLONE", "EVENT_CLOSE", "EVENT_CONNECT", "EVENT_CREATE_OBJECT", "EVENT_CREATE_THREAD", "EVENT_EXECUTE", "EVENT_FORK", "EVENT_LINK", "EVENT_UNLINK", "EVENT_MMAP", "EVENT_MODIFY_FILE_ATTRIBUTES", "EVENT_MPROTECT", "EVENT_OPEN", "EVENT_READ", "EVENT_RENAME", "EVENT_WRITE", "EVENT_SIGNAL", "EVENT_TRUNCATE", "EVENT_WAIT", "EVENT_OS_UNKNOWN", "EVENT_KERNEL_UNKNOWN", "EVENT_APP_UNKNOWN", "EVENT_UI_UNKNOWN", "EVENT_UNKNOWN", "EVENT_BLIND", "EVENT_UNIT", "EVENT_UPDATE"], "namespace": "com.bbn.tc.schema.avro", "type": "enum", "name": "EventType", "doc": "* These event types correspond to the common system calls. Note that we added blind, unit, and update events\n     *   EVENT_ACCEPT                     accept a connection on an object\n     *   EVENT_BIND                       bind to a network endpoint object\n     *   EVENT_CHANGE_PRINCIPAL           change the principal associated with the process\n     *   EVENT_CHECK_FILE_ATTRIBUTES      check the file attributes such as permissions\n     *   EVENT_CLONE                      clone a subject\n     *   EVENT_CLOSE                      close an object\n     *   EVENT_CONNECT                    connect to an object\n     *   EVENT_CREATE_OBJECT              create an object\n     *   EVENT_CREATE_THREAD              create a thread subject\n     *   EVENT_EXECUTE                    execute an object\n     *   EVENT_FORK                       fork a process subject\n     *   EVENT_LINK                       link an object to a new name\n     *   EVENT_UNLINK                     unlink a name from an object\n     *   EVENT_MMAP                       memory map an object\n     *   EVENT_MODIFY_FILE_ATTRIBUTES     modify the attributes of a file object\n     *   EVENT_MPROTECT                   change permissions of a memory object\n     *   EVENT_OPEN                       open an object\n     *   EVENT_READ                       read an object\n     *   EVENT_RENAME                     rename an object\n     *   EVENT_WRITE                      write to an object\n     *   EVENT_SIGNAL                     signal another subject\n     *   EVENT_TRUNCATE                   truncate an object\n     *   EVENT_WAIT                       wait on another subject\n     *   EVENT_KERNEL_UNKNOWN             some kernel event\n     *   EVENT_OS_UNKNOWN                 some OS layer event\n     *   EVENT_APP_UNKNOWN                some application layer event\n     *   EVENT_UI_UNKNOWN                 some UI layer event\n     *   EVENT_UNKNOWN                    some event (we don't know what layer)\n     *   EVENT_BLIND                      blind event for a black boxes that are not instrumented\n     *   EVENT_UNIT                       create a BEEP unit\n     *   EVENT_UPDATE                     update an object"}, "name": "type"}, {"doc": "The thread id to which this event belongs", "type": "int", "name": "threadId"}, {"doc": "What source system generated this event, see InstrumentationSource", "type": "com.bbn.tc.schema.avro.InstrumentationSource", "name": "source"}, {"default": null, "doc": "* The time at which the event occurred. Timestamps allow reasoning about order of events\n         *  on a host when the same clock is used.\n         * TODO When different clocks are used on a host or across hosts, we need to also define a clock source\n         * A timestamp stores the number of microseconds from the unix epoch, 1 January 1970 00:00:00.000000 UTC.", "type": ["null", "long"], "name": "timestampMicros"}, {"default": null, "doc": "Event name (Optional)", "type": ["null", "string"], "name": "name"}, {"default": null, "doc": "Event parameters represented as values, see Value (Optional)", "type": ["null", {"items": {"doc": "*  Values represent transient data, mainly parameters to events\n     *  Values are created and used once within an event's execution\n     *  and are relevant mainly during fine-grained tracking (such as\n     *  with tag/taint propagation)\n     *  Values have tags describing their provenance\n     *  Sometimes the actual value's value is reported in addition to\n     *  the value's metadata", "namespace": "com.bbn.tc.schema.avro", "name": "Value", "fields": [{"doc": "The size of the value in bytes", "type": "int", "name": "size"}, {"default": null, "doc": "The actual datatype of the value, e.g., int, double, array<int>, etc. (Optional)", "type": ["null", "string"], "name": "valueDataType"}, {"default": null, "doc": "The actual bytes of the value (Optional)", "type": ["null", "bytes"], "name": "valueBytes"}, {"default": null, "doc": "* the value's tag expression describing its provenance\n         * since value could be an array, the tag can use run length\n         * encoding if needed. The format of the array is as follows\n         *   {<numBytes:int>, <tagId:int>}*\n         * For example, to assign a tag 0 (unknown) to bytes 0-3, 1 to bytes 4-7 of the value,\n         * and 2 to bytes 8-15, this would represented using\n         * the following tag array\n         *  {4, 0, 4, 1, 8, 2} meaning the first 4 bytes have tag 0, next 4 have tag 1, next 8 have tag 2\n         *\n         * Note that tagId had to be defined/emitted earlier (see ProvenanceTagNode)\n         * before it can be assigned to a value", "type": ["null", {"items": "int", "type": "array"}], "name": "tag"}], "type": "record"}, "type": "array"}], "name": "parameters"}, {"default": null, "doc": "Location refers to the location of the data affecting the event\n         *  (e.g., the read offset in the file for the read system call event (Optional)", "type": ["null", "long"], "name": "location"}, {"default": null, "doc": "Size refers to the size of the data affecting the event\n         *  (e.g., the number of bytes read from the file for the read system call event (Optional)", "type": ["null", "long"], "name": "size"}, {"default": null, "doc": "The program point where the event was triggered (e.g., executable and line number), (Optional)", "type": ["null", "string"], "name": "programPoint"}, {"default": null, "doc": "Arbitrary key, value pairs describing the entity", "type": ["null", {"type": "map", "values": "string"}], "name": "properties"}], "type": "record"}, {"doc": "* Represents a network flow object. Instantiates an AbstractObject.", "namespace": "com.bbn.tc.schema.avro", "name": "NetFlowObject", "fields": [{"doc": "Universally unique identifier for the object", "type": "com.bbn.tc.schema.avro.UUID", "name": "uuid"}, {"doc": "The base object attributes", "type": {"doc": "*  Objects, in general, represent data sources and sinks which could include sockets, files,\n     *  memory, and any data in general that can be an input and/or output to an event.\n     *  This record is intended to be abstract i.e., one should not instantiate an Object\n     *  but rather instantiate one of its sub types File, NetFlow, of Memory", "namespace": "com.bbn.tc.schema.avro", "name": "AbstractObject", "fields": [{"doc": "The source that emitted the object, see InstrumentationSource", "type": "com.bbn.tc.schema.avro.InstrumentationSource", "name": "source"}, {"default": null, "doc": "Permission bits defined over the object (Optional)", "type": ["null", {"namespace": "com.bbn.tc.schema.avro", "type": "fixed", "name": "SHORT", "size": 2}], "name": "permission"}, {"default": null, "doc": "* The timestamp when the object was last modified (Optional).\n        * A timestamp stores the number of microseconds from the unix epoch, 1 January 1970 00:00:00.000000 UTC.", "type": ["null", "long"], "name": "lastTimestampMicros"}, {"default": null, "doc": "An expressive tag which could include conf/integ and other source provenance (Optional)", "type": ["null", "com.bbn.tc.schema.avro.ProvenanceTagNode"], "name": "tag"}, {"default": null, "doc": "Arbitrary key, value pairs describing the entity", "type": ["null", {"type": "map", "values": "string"}], "name": "properties"}], "type": "record"}, "name": "baseObject"}, {"doc": "The ip address of the source host for this flow", "type": "string", "name": "srcAddress"}, {"doc": "The network port on the source host for this flow", "type": "int", "name": "srcPort"}, {"doc": "The ip address of the destination host for this flow", "type": "string", "name": "destAddress"}, {"doc": "The network port on the destination host for this flow", "type": "int", "name": "destPort"}], "type": "record"}, {"doc": "* Represents a file on the file system. Instantiates an AbstractObject.", "namespace": "com.bbn.tc.schema.avro", "name": "FileObject", "fields": [{"doc": "Universally unique identifier for the object", "type": "com.bbn.tc.schema.avro.UUID", "name": "uuid"}, {"doc": "The base object attributes", "type": "com.bbn.tc.schema.avro.AbstractObject", "name": "baseObject"}, {"doc": "The location of the file absolute path or remote url", "type": "string", "name": "url"}, {"default": false, "doc": "Whether the file is a Unix pipe", "type": "boolean", "name": "isPipe"}, {"default": 1, "doc": "The file version incremented every time the file changes", "type": "int", "name": "version"}, {"default": null, "doc": "The file size in bytes (Optional)", "type": ["null", "long"], "name": "size"}], "type": "record"}, {"doc": "* Represents a generic source or sink on the host device that is can be a file, memory, or netflow.\n     * This is the most basic representation of a source or sink, basically specifying its type only.", "namespace": "com.bbn.tc.schema.avro", "name": "SrcSinkObject", "fields": [{"doc": "Universally unique identifier for the object", "type": "com.bbn.tc.schema.avro.UUID", "name": "uuid"}, {"doc": "The base object attributes", "type": "com.bbn.tc.schema.avro.AbstractObject", "name": "baseObject"}, {"doc": "The type of the object", "type": {"symbols": ["SOURCE_ACCELEROMETER", "SOURCE_TEMPERATURE", "SOURCE_GYROSCOPE", "SOURCE_MAGNETIC_FIELD", "SOURCE_HEART_RATE", "SOURCE_LIGHT", "SOURCE_PROXIMITY", "SOURCE_PRESSURE", "SOURCE_RELATIVE_HUMIDITY", "SOURCE_LINEAR_ACCELERATION", "SOURCE_MOTION", "SOURCE_STEP_DETECTOR", "SOURCE_STEP_COUNTER", "SOURCE_TILT_DETECTOR", "SOURCE_ROTATION_VECTOR", "SOURCE_GRAVITY", "SOURCE_GEOMAGNETIC_ROTATION_VECTOR", "SOURCE_CAMERA", "SOURCE_GPS", "SOURCE_AUDIO", "SOURCE_SYSTEM_PROPERTY", "SOURCE_SINK_IPC", "SOURCE_UNKNOWN"], "namespace": "com.bbn.tc.schema.avro", "type": "enum", "name": "SrcSinkType", "doc": "* There are many types of sources such as sensors\n     * The type of a sensor could be base (close to hardware) or composite\n     * See https://source.android.com/devices/sensors/index.html for details\n     * TODO: camera and GPS ideally should be modeled separately to match the Android model. These are rich subsystems"}, "name": "type"}], "type": "record"}, {"doc": "* Represents a page in memory. Instantiates an AbstractObject.\n     * TODO: is memory really an object (with permissions and so on) or is it a transient data?", "namespace": "com.bbn.tc.schema.avro", "name": "MemoryObject", "fields": [{"doc": "Universally unique identifier for the object", "type": "com.bbn.tc.schema.avro.UUID", "name": "uuid"}, {"doc": "The base object attributes", "type": "com.bbn.tc.schema.avro.AbstractObject", "name": "baseObject"}, {"doc": "The location in memory", "type": "long", "name": "memoryAddress"}, {"default": null, "doc": "The memory page number", "type": ["null", "long"], "name": "pageNumber"}], "type": "record"}, {"doc": "* A principal is a local user\n    * TODO: extend for second evaluation to include remote principals\n    * TODO: what happens when the user information changes (are we tracking versions?)\n    * TODO: Authentication mechanisms: are TA1s providing that information and how?", "namespace": "com.bbn.tc.schema.avro", "name": "Principal", "fields": [{"doc": "A unique id for the principal", "type": "com.bbn.tc.schema.avro.UUID", "name": "uuid"}, {"default": "PRINCIPAL_LOCAL", "doc": "The type of the principal, local by default", "type": {"symbols": ["PRINCIPAL_LOCAL", "PRINCIPAL_REMOTE"], "namespace": "com.bbn.tc.schema.avro", "type": "enum", "name": "PrincipalType", "doc": "* The type of principal may be local to the host, or remote users/systems."}, "name": "type"}, {"doc": "The operating system id associated with the user", "type": "int", "name": "userId"}, {"doc": "The ids of the groups which this user is part of", "type": {"items": "int", "type": "array"}, "name": "groupIds"}, {"doc": "The source that emitted the Principal record, see InstrumentationSource", "type": "com.bbn.tc.schema.avro.InstrumentationSource", "name": "source"}, {"default": null, "doc": "Arbitrary key, value pairs describing the entity", "type": ["null", {"type": "map", "values": "string"}], "name": "properties"}], "type": "record"}, {"doc": "* Edges in the CDM only connect the entities and do not have attributes of their own.\n     *  In order to make the streaming efficient, the edge specification does not require\n     *  the objects on both ends every time it is streamed/serialized. Instead, we defined\n     *  the edge to be simple, it has a type and it connects two entities each identified by\n     *  a uid each.\n     * Since the different edge types in the current model do not have different properties\n     *  (actually no properties at all), we do not define the different edges as separate\n     *  records at this time.\n     * For example, when streaming a large number of edges having the same from node, the\n     *  from node in all these edges will be represented using the node id instead of having\n     *  to replicate the full node object on the wire.", "namespace": "com.bbn.tc.schema.avro", "name": "SimpleEdge", "fields": [{"doc": "A unique id of the From entity on the edge", "type": "com.bbn.tc.schema.avro.UUID", "name": "fromUuid"}, {"doc": "The id of the To entity on the edge", "type": "com.bbn.tc.schema.avro.UUID", "name": "toUuid"}, {"doc": "The type of the edge, see EdgeType", "type": {"symbols": ["EDGE_EVENT_AFFECTS_MEMORY", "EDGE_EVENT_AFFECTS_FILE", "EDGE_EVENT_AFFECTS_NETFLOW", "EDGE_EVENT_AFFECTS_SUBJECT", "EDGE_EVENT_AFFECTS_SRCSINK", "EDGE_EVENT_HASPARENT_EVENT", "EDGE_EVENT_ISGENERATEDBY_SUBJECT", "EDGE_SUBJECT_AFFECTS_EVENT", "EDGE_SUBJECT_HASPARENT_SUBJECT", "EDGE_SUBJECT_HASLOCALPRINCIPAL", "EDGE_SUBJECT_RUNSON", "EDGE_FILE_AFFECTS_EVENT", "EDGE_NETFLOW_AFFECTS_EVENT", "EDGE_MEMORY_AFFECTS_EVENT", "EDGE_SRCSINK_AFFECTS_EVENT", "EDGE_OBJECT_PREV_VERSION"], "namespace": "com.bbn.tc.schema.avro", "type": "enum", "name": "EdgeType", "doc": "* The different types of simple edges in the CDM\n     *   EDGE_EVENT_AFFECTS_MEMORY          an event affects a memory object (such as updating a memory location)\n     *   EDGE_EVENT_AFFECTS_FILE            an event affects a file object (such as writing to a file)\n     *   EDGE_EVENT_AFFECTS_NETFLOW         an event affects a netflow object (such as writing to socket)\n     *   EDGE_EVENT_AFFECTS_SUBJECT         an event affects a subject (such as forking a process)\n     *   EDGE_EVENT_AFFECTS_SRCSINK         an event affects a generic src/sink object\n     *   EDGE_EVENT_HASPARENT_EVENT         a metaevent that represents a set of child atomic events\n     *   EDGE_EVENT_ISGENERATEDBY_SUBJECT   an event is generated by a subject (every event is)\n     *   EDGE_SUBJECT_AFFECTS_EVENT         a subject affects an event (such as when killing a process)\n     *   EDGE_SUBJECT_HASPARENT_SUBJECT     a subject has a parent subject (such as thread has parent process)\n     *   EDGE_SUBJECT_HASPRINCIPAL          a subject has a principal (such as a process owned by a user)\n     *   EDGE_SUBJECT_RUNSON                a subject runs on a host (TODO: host not yet modeled)\n     *   EDGE_FILE_AFFECTS_EVENT            an event reads from a file\n     *   EDGE_NETFLOW_AFFECTS_EVENT         an event reads from a network flow\n     *   EDGE_MEMORY_AFFECTS_EVENT          an event reads from a memory object\n     *   EDGE_SRCSINK_AFFECTS_EVENT         a generic source/sink object affects an event\n     *   EDGE_OBJECT_PREV_VERSION           the previous version of an object, typically used for file versioning\n     *"}, "name": "type"}, {"doc": "* When the edge was created.\n        * Timestamp stores the number of microseconds from the unix epoch, 1 January 1970 00:00:00.000000 UTC.", "type": "long", "name": "timestamp"}, {"default": null, "doc": "Arbitrary key, value pairs describing the edge", "type": ["null", {"type": "map", "values": "string"}], "name": "properties"}], "type": "record"}], "name": "datum"}], "type": "record"}avro.codecnull V´TäiÛçl¢ÜþKx®Êç00000000000000000000000000001001 Ò  00000000000018446744073709552804 ÈÆ
³Øý      exec&/usr/local/bin/wget 0000000000001844674407370955280400000000000000000000000000001001³Øý 00000000000055340232221128654849 ü£øÕ½÷ÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720271877500modulefreebsdcallopenatprovidersyscallpath /etc/libmap.conf 00000000000085608321507693227389     /etc/libmap.conf  0000000000008560832150769322738900000000000055340232221128654849øÕ½÷ÎúÝ³( 0000000000005534023222112865484900000000000018446744073709552804øÕ½÷ÎúÝ³( 00000000000055340232221128654852 ü£øÕ½÷ÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720271877500modulefreebsdcallopenatprovidersyscallpath6/usr/local/lib/libintl.so.8 00000000000087378785555031135651    6/usr/local/lib/libintl.so.8  0000000000008737878555503113565100000000000055340232221128654852øÕ½÷ÎúÝ³( 0000000000005534023222112865485200000000000018446744073709552804øÕ½÷ÎúÝ³( 00000000000055340232221128654848 ü£þÑöÎúÝ³(     
probe
entrycallexecvemodulefreebsdprovidersyscall 0000000000005534023222112865484800000000000018446744073709552804þÑöÎúÝ³( 00000000000055340232221128654851
ü£øÕ½÷ÎúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865485100000000000018446744073709552804øÕ½÷ÎúÝ³( 00000000000055340232221128654855 ü£øÕ½÷ÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720271877500modulefreebsdcallopenatprovidersyscallpath0/var/run/ld-elf.so.hints 00000000000083789030074173787481    0/var/run/ld-elf.so.hints  0000000000008378903007417378748100000000000055340232221128654855øÕ½÷ÎúÝ³( 0000000000005534023222112865485500000000000018446744073709552804øÕ½÷ÎúÝ³( 00000000000055340232221128654857"ü£øÕ½÷ÎúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865485700000000000018446744073709552804øÕ½÷ÎúÝ³( 00000000000055340232221128654854
ü£øÕ½÷ÎúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865485400000000000018446744073709552804øÕ½÷ÎúÝ³( 00000000000055340232221128654860 ü£øÕ½÷ÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720271877500modulefreebsdcallopenatprovidersyscallpath(/usr/lib/libssl.so.8 00000000000089189723793837323279    (/usr/lib/libssl.so.8  0000000000008918972379383732327900000000000055340232221128654860øÕ½÷ÎúÝ³( 0000000000005534023222112865486000000000000018446744073709552804øÕ½÷ÎúÝ³( 00000000000055340232221128654859
ü£øÕ½÷ÎúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865485900000000000018446744073709552804øÕ½÷ÎúÝ³( 00000000000055340232221128654858"ü£øÕ½÷ÎúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865485800000000000018446744073709552804øÕ½÷ÎúÝ³( 00000000000055340232221128654863 ü£øÕ½÷ÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720271877500modulefreebsdcallopenatprovidersyscallpath&/lib/libcrypto.so.8 00000000000076119294674630432544    &/lib/libcrypto.so.8  0000000000007611929467463043254400000000000055340232221128654863øÕ½÷ÎúÝ³( 0000000000005534023222112865486300000000000018446744073709552804øÕ½÷ÎúÝ³( 00000000000055340232221128654862
ü£øÕ½÷ÎúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865486200000000000018446744073709552804øÕ½÷ÎúÝ³( 00000000000055340232221128654866$ ü£øÕ½÷ÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720271877500modulefreebsdcallopenatprovidersyscallpath/lib/libz.so.6 00000000000083219984329498096868    /lib/libz.so.6  0000000000008321998432949809686800000000000055340232221128654866øÕ½÷ÎúÝ³( 0000000000005534023222112865486600000000000018446744073709552804øÕ½÷ÎúÝ³( 00000000000055340232221128654865"
ü£øÕ½÷ÎúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865486500000000000018446744073709552804øÕ½÷ÎúÝ³( 00000000000055340232221128654869* ü£°Î·øÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720272876440modulefreebsdcallopenatprovidersyscallpath6/usr/local/lib/libidn.so.11 00000000000077948557565403416653    6/usr/local/lib/libidn.so.11  0000000000007794855756540341665300000000000055340232221128654869°Î·øÎúÝ³( 0000000000005534023222112865486900000000000018446744073709552804°Î·øÎúÝ³( 00000000000055340232221128654868(
ü£°Î·øÎúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865486800000000000018446744073709552804°Î·øÎúÝ³( 000000000000553402322211286548720 ü£°Î·øÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720272876440modulefreebsdcallopenatprovidersyscallpath/lib/libc.so.7 00000000000082966835934125173098    /lib/libc.so.7  0000000000008296683593412517309800000000000055340232221128654872°Î·øÎúÝ³( 0000000000005534023222112865487200000000000018446744073709552804°Î·øÎúÝ³( 00000000000055340232221128654871.
ü£°Î·øÎúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865487100000000000018446744073709552804°Î·øÎúÝ³( 000000000000553402322211286548756 ü£¨ÀþÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720278880276modulefreebsdcallopenprovidersyscallpath/usr/lib/i18n 00000000000077028813266795196803    /usr/lib/i18n  0000000000007702881326679519680300000000000055340232221128654875¨ÀþÎúÝ³( 0000000000005534023222112865487500000000000018446744073709552804¨ÀþÎúÝ³( 000000000000553402322211286548744
ü£°Î·øÎúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865487400000000000018446744073709552804°Î·øÎúÝ³( 00000000000055340232221128654878< ü£¨ÀþÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720278880276modulefreebsdcallopenatprovidersyscallpath>/usr/lib/i18n/libiconv_std.so.4 00000000000086857045082371016992    >/usr/lib/i18n/libiconv_std.so.4  0000000000008685704508237101699200000000000055340232221128654878¨ÀþÎúÝ³( 0000000000005534023222112865487800000000000018446744073709552804¨ÀþÎúÝ³( 00000000000055340232221128654877:
ü£¨ÀþÎúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865487700000000000018446744073709552804¨ÀþÎúÝ³( 00000000000055340232221128654881B ü£¨ÀþÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720278880276modulefreebsdcallopenprovidersyscallpathD/usr/share/i18n/esdb/esdb.alias.db 00000000000081141289874122311012    D/usr/share/i18n/esdb/esdb.alias.db  0000000000008114128987412231101200000000000055340232221128654881¨ÀþÎúÝ³( 0000000000005534023222112865488100000000000018446744073709552804¨ÀþÎúÝ³( 00000000000055340232221128654880@
ü£¨ÀþÎúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865488000000000000018446744073709552804¨ÀþÎúÝ³( 00000000000055340232221128654884H ü£ÿÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720279875654modulefreebsdcallopenprovidersyscallpath@/usr/share/i18n/esdb/esdb.dir.db 00000000000080948241000426648137    @/usr/share/i18n/esdb/esdb.dir.db  0000000000008094824100042664813700000000000055340232221128654884ÿÎúÝ³( 0000000000005534023222112865488400000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654883F
ü£¨ÀþÎúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865488300000000000018446744073709552804¨ÀþÎúÝ³( 00000000000055340232221128654887N ü£ÿÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720279875654modulefreebsdcallopenprovidersyscallpathT/usr/share/i18n/esdb/ISO646/ISO646-US.esdb 00000000000091219881368391823730    T/usr/share/i18n/esdb/ISO646/ISO646-US.esdb  0000000000009121988136839182373000000000000055340232221128654887ÿÎúÝ³( 0000000000005534023222112865488700000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654886L
ü£ÿÎúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865488600000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654890T ü£ÿÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720279875654modulefreebsdcallopenprovidersyscallpathD/usr/share/i18n/esdb/esdb.alias.db 0000000000008114128987412231101200000000000055340232221128654890ÿÎúÝ³( 0000000000005534023222112865489000000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654889R
ü£ÿÎúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865488900000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654893Z ü£ÿÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720279875654modulefreebsdcallopenprovidersyscallpath@/usr/share/i18n/esdb/esdb.dir.db 0000000000008094824100042664813700000000000055340232221128654893ÿÎúÝ³( 0000000000005534023222112865489300000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654892X
ü£ÿÎúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865489200000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654896` ü£ÿÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720279875654modulefreebsdcallopenprovidersyscallpathF/usr/share/i18n/esdb/UTF/UTF-8.esdb 00000000000091614392616104591451    F/usr/share/i18n/esdb/UTF/UTF-8.esdb  0000000000009161439261610459145100000000000055340232221128654896ÿÎúÝ³( 0000000000005534023222112865489600000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654895^
ü£ÿÎúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865489500000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654899f ü£ÿÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720279875654modulefreebsdcallopenprovidersyscallpath/usr/lib/i18n 0000000000007702881326679519680300000000000055340232221128654899ÿÎúÝ³( 0000000000005534023222112865489900000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654898d
ü£ÿÎúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865489800000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654902l ü£ÿÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720279875654modulefreebsdcallopenatprovidersyscallpath4/usr/lib/i18n/libUTF8.so.4 00000000000091867909274501595277    4/usr/lib/i18n/libUTF8.so.4  0000000000009186790927450159527700000000000055340232221128654902ÿÎúÝ³( 0000000000005534023222112865490200000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654901j
ü£ÿÎúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865490100000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654905r ü£ÿÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720279875654modulefreebsdcallopenprovidersyscallpathR/usr/share/i18n/csmapper/charset.alias.db 00000000000085168755092712474952    R/usr/share/i18n/csmapper/charset.alias.db  0000000000008516875509271247495200000000000055340232221128654905ÿÎúÝ³( 0000000000005534023222112865490500000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654907v ü£ÿÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720279875654modulefreebsdcallopenprovidersyscallpathL/usr/share/i18n/csmapper/charset.alias 00000000000079227842042651331605    L/usr/share/i18n/csmapper/charset.alias  0000000000007922784204265133160500000000000055340232221128654907ÿÎúÝ³( 0000000000005534023222112865490700000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654904p
ü£ÿÎúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865490400000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654909z ü£ÿÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720279875654modulefreebsdcallopenprovidersyscallpathR/usr/share/i18n/csmapper/charset.alias.db 0000000000008516875509271247495200000000000055340232221128654909ÿÎúÝ³( 0000000000005534023222112865490900000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654911~ ü£ÿÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720279875654modulefreebsdcallopenprovidersyscallpathL/usr/share/i18n/csmapper/charset.alias 0000000000007922784204265133160500000000000055340232221128654911ÿÎúÝ³( 0000000000005534023222112865491100000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654913 ü£ÿÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720279875654modulefreebsdcallopenprovidersyscallpathF/usr/share/i18n/csmapper/mapper.dir 00000000000077922707540321008200    F/usr/share/i18n/csmapper/mapper.dir  0000000000007792270754032100820000000000000055340232221128654913ÿÎúÝ³( 0000000000005534023222112865491300000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654916 ü£ÿÎúÝ³(     
probeentry:return*returnTimestampMicros&1455713720279875654modulefreebsdcallopenprovidersyscallpath/usr/lib/i18n 0000000000007702881326679519680300000000000055340232221128654916ÿÎúÝ³( 0000000000005534023222112865491600000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654915
ü£ÿÎúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865491500000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654919 ü£þÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720280893311modulefreebsdcallopenatprovidersyscallpath@/usr/lib/i18n/libmapper_646.so.4 00000000000080808976617761431734    @/usr/lib/i18n/libmapper_646.so.4  0000000000008080897661776143173400000000000055340232221128654919þÏúÝ³( 0000000000005534023222112865491900000000000018446744073709552804þÏúÝ³( 00000000000055340232221128654918
ü£ÿÎúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865491800000000000018446744073709552804ÿÎúÝ³( 00000000000055340232221128654922 ü£þÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720280893311modulefreebsdcallopenprovidersyscallpathb/usr/share/i18n/csmapper/ISO646/ISO646-US%UCS.646 00000000000088621589602709040354    b/usr/share/i18n/csmapper/ISO646/ISO646-US%UCS.646  0000000000008862158960270904035400000000000055340232221128654922þÏúÝ³( 0000000000005534023222112865492200000000000018446744073709552804þÏúÝ³( 00000000000055340232221128654921
ü£þÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865492100000000000018446744073709552804þÏúÝ³( 00000000000055340232221128654925 ü£þÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720280893311modulefreebsdcallopenprovidersyscallpath/etc/localtime 00000000000080526767220491425058    /etc/localtime  0000000000008052676722049142505800000000000055340232221128654925þÏúÝ³( 0000000000005534023222112865492500000000000018446744073709552804þÏúÝ³( 00000000000055340232221128654924
ü£þÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865492400000000000018446744073709552804þÏúÝ³( 00000000000055340232221128654929¢ ü£þÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720280893311modulefreebsdcallopenprovidersyscallpath</usr/share/zoneinfo/posixrules 00000000000089858806263877645267    </usr/share/zoneinfo/posixrules  0000000000008985880626387764526700000000000055340232221128654929þÏúÝ³( 0000000000005534023222112865492900000000000018446744073709552804þÏúÝ³( 00000000000055340232221128654927"ü£þÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865492700000000000018446744073709552804þÏúÝ³( 00000000000055340232221128654928 
ü£þÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865492800000000000018446744073709552804þÏúÝ³( 00000000000055340232221128654933ª ü£ÌùÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720281874022modulefreebsdcallopenprovidersyscallpath/usr/lib/i18n 0000000000007702881326679519680300000000000055340232221128654933ÌùÏúÝ³( 0000000000005534023222112865493300000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654932¨
ü£þÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865493200000000000018446744073709552804þÏúÝ³( 00000000000055340232221128654931¦"ü£þÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865493100000000000018446744073709552804þÏúÝ³( 00000000000055340232221128654936° ü£ÌùÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720281874022modulefreebsdcallopenprovidersyscallpathD/usr/share/i18n/esdb/esdb.alias.db 0000000000008114128987412231101200000000000055340232221128654936ÌùÏúÝ³( 0000000000005534023222112865493600000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654935®
ü£ÌùÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865493500000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654939¶ ü£ÌùÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720281874022modulefreebsdcallopenprovidersyscallpath@/usr/share/i18n/esdb/esdb.dir.db 0000000000008094824100042664813700000000000055340232221128654939ÌùÏúÝ³( 0000000000005534023222112865493900000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654938´
ü£ÌùÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865493800000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654942¼ ü£ÌùÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720281874022modulefreebsdcallopenprovidersyscallpathF/usr/share/i18n/esdb/UTF/UTF-8.esdb 0000000000009161439261610459145100000000000055340232221128654942ÌùÏúÝ³( 0000000000005534023222112865494200000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654941º
ü£ÌùÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865494100000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654945Â ü£ÌùÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720281874022modulefreebsdcallopenprovidersyscallpathD/usr/share/i18n/esdb/esdb.alias.db 0000000000008114128987412231101200000000000055340232221128654945ÌùÏúÝ³( 0000000000005534023222112865494500000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654944À
ü£ÌùÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865494400000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654948È ü£ÌùÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720281874022modulefreebsdcallopenprovidersyscallpath@/usr/share/i18n/esdb/esdb.dir.db 0000000000008094824100042664813700000000000055340232221128654948ÌùÏúÝ³( 0000000000005534023222112865494800000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654947Æ
ü£ÌùÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865494700000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654951Î ü£ÌùÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720281874022modulefreebsdcallopenprovidersyscallpathT/usr/share/i18n/esdb/ISO646/ISO646-US.esdb 0000000000009121988136839182373000000000000055340232221128654951ÌùÏúÝ³( 0000000000005534023222112865495100000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654950Ì
ü£ÌùÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865495000000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654954Ô ü£ÌùÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720281874022modulefreebsdcallopenprovidersyscallpath/usr/lib/i18n 0000000000007702881326679519680300000000000055340232221128654954ÌùÏúÝ³( 0000000000005534023222112865495400000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654953Ò
ü£ÌùÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865495300000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654957Ú ü£ÌùÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720281874022modulefreebsdcallopenprovidersyscallpathR/usr/share/i18n/csmapper/charset.alias.db 0000000000008516875509271247495200000000000055340232221128654957ÌùÏúÝ³( 0000000000005534023222112865495700000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654959Þ ü£ÌùÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720281874022modulefreebsdcallopenprovidersyscallpathL/usr/share/i18n/csmapper/charset.alias 0000000000007922784204265133160500000000000055340232221128654959ÌùÏúÝ³( 0000000000005534023222112865495900000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654956Ø
ü£ÌùÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865495600000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654961â ü£ÌùÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720281874022modulefreebsdcallopenprovidersyscallpathR/usr/share/i18n/csmapper/charset.alias.db 0000000000008516875509271247495200000000000055340232221128654961ÌùÏúÝ³( 0000000000005534023222112865496100000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654963æ ü£ÌùÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720281874022modulefreebsdcallopenprovidersyscallpathL/usr/share/i18n/csmapper/charset.alias 0000000000007922784204265133160500000000000055340232221128654963ÌùÏúÝ³( 0000000000005534023222112865496300000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654965ê ü£ÌùÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720281874022modulefreebsdcallopenprovidersyscallpathF/usr/share/i18n/csmapper/mapper.dir 0000000000007792270754032100820000000000000055340232221128654965ÌùÏúÝ³( 0000000000005534023222112865496500000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654968ð ü£ÌùÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720281874022modulefreebsdcallopenprovidersyscallpath/usr/lib/i18n 0000000000007702881326679519680300000000000055340232221128654968ÌùÏúÝ³( 0000000000005534023222112865496800000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654967î
ü£ÌùÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865496700000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654971ö ü£ÌùÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720281874022modulefreebsdcallopenprovidersyscallpathb/usr/share/i18n/csmapper/ISO646/ISO646-US%UCS.646 0000000000008862158960270904035400000000000055340232221128654971ÌùÏúÝ³( 0000000000005534023222112865497100000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654970ô
ü£ÌùÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865497000000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654974ü ü£ÌùÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720281874022modulefreebsdcallopenprovidersyscallpath$/etc/nsswitch.conf 00000000000088670822972254251643    $/etc/nsswitch.conf  0000000000008867082297225425164300000000000055340232221128654974ÌùÏúÝ³( 0000000000005534023222112865497400000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654976"ü£ÌùÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865497600000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654973ú
ü£ÌùÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865497300000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654979 ü£¨üÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720282873940modulefreebsdcallopenprovidersyscallpath/etc/hosts 00000000000086618058929174643857    /etc/hosts  0000000000008661805892917464385700000000000055340232221128654979¨üÏúÝ³( 0000000000005534023222112865497900000000000018446744073709552804¨üÏúÝ³( 00000000000055340232221128654977"ü£ÌùÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865497700000000000018446744073709552804ÌùÏúÝ³( 00000000000055340232221128654981"ü£¨üÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865498100000000000018446744073709552804¨üÏúÝ³( 00000000000055340232221128654978
ü£¨üÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865497800000000000018446744073709552804¨üÏúÝ³( 00000000000055340232221128654984 ü£öÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720283873857modulefreebsdcallopenprovidersyscallpath /etc/resolv.conf 00000000000091508115167218126415     /etc/resolv.conf  0000000000009150811516721812641500000000000055340232221128654984öÏúÝ³( 0000000000005534023222112865498400000000000018446744073709552804öÏúÝ³( 00000000000055340232221128654982"ü£¨üÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865498200000000000018446744073709552804¨üÏúÝ³( 00000000000055340232221128654986"ü£öÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865498600000000000018446744073709552804öÏúÝ³( 00000000000055340232221128654983
ü£¨üÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865498300000000000018446744073709552804¨üÏúÝ³( 00000000000055340232221128654989ü£öÏúÝ³(     err0family2
probereturnmodulefreebsdcallconnectprovidersyscallport53address172.16.57.2 00000000000092233720368547758080    localhost172.16.57.2j0000000000005534023222112865498900000000000092233720368547758080öÏúÝ³( 0000000000005534023222112865498900000000000018446744073709552804öÏúÝ³( 00000000000055340232221128654988
ü£öÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865498800000000000018446744073709552804öÏúÝ³( 00000000000055340232221128654991ü£°î¨ÏúÝ³(     err0family2
probereturnmodulefreebsdcallconnectprovidersyscallport53address172.16.57.2 00000000000092233720368547758081    localhost172.16.57.2j0000000000005534023222112865499100000000000092233720368547758081°î¨ÏúÝ³( 0000000000005534023222112865499100000000000018446744073709552804°î¨ÏúÝ³( 00000000000055340232221128654990
ü£°î¨ÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865499000000000000018446744073709552804°î¨ÏúÝ³( 00000000000055340232221128654987"ü£öÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865498700000000000018446744073709552804öÏúÝ³( 00000000000055340232221128654993¢ü£âùçÏúÝ³(     err65family28
probereturnmodulefreebsdcallconnectprovidersyscallport1address02607:f8b0:4006:80f::2004 00000000000092233720368547758082    localhost02607:f8b0:4006:80f::20040000000000005534023222112865499300000000000092233720368547758082âùçÏúÝ³( 0000000000005534023222112865499300000000000018446744073709552804âùçÏúÝ³( 00000000000055340232221128654992 
ü£âùçÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865499200000000000018446744073709552804âùçÏúÝ³( 00000000000055340232221128654995¦ü£âùçÏúÝ³(     err0family2
probereturnmodulefreebsdcallconnectprovidersyscallport1address146.115.8.98 00000000000092233720368547758083    localhost146.115.8.980000000000005534023222112865499500000000000092233720368547758083âùçÏúÝ³( 0000000000005534023222112865499500000000000018446744073709552804âùçÏúÝ³( 00000000000055340232221128654994¤
ü£âùçÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865499400000000000018446744073709552804âùçÏúÝ³( 00000000000055340232221128654997ªü£âùçÏúÝ³(     err0family2
probereturnmodulefreebsdcallconnectprovidersyscallport1address146.115.8.87 00000000000092233720368547758084    localhost146.115.8.870000000000005534023222112865499700000000000092233720368547758084âùçÏúÝ³( 0000000000005534023222112865499700000000000018446744073709552804âùçÏúÝ³( 00000000000055340232221128654996¨
ü£âùçÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865499600000000000018446744073709552804âùçÏúÝ³( 00000000000055340232221128654999®ü£ÈÞáÏúÝ³(     err0family2
probereturnmodulefreebsdcallconnectprovidersyscallport1address146.115.8.83 00000000000092233720368547758085    localhost146.115.8.830000000000005534023222112865499900000000000092233720368547758085ÈÞáÏúÝ³( 0000000000005534023222112865499900000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128654998¬
ü£ÈÞáÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865499800000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655001²ü£ÈÞáÏúÝ³(     err0family2
probereturnmodulefreebsdcallconnectprovidersyscallport1address146.115.8.106 00000000000092233720368547758086    localhost146.115.8.1060000000000005534023222112865500100000000000092233720368547758086ÈÞáÏúÝ³( 0000000000005534023222112865500100000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655000°
ü£ÈÞáÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865500000000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655003¶ü£ÈÞáÏúÝ³(     err0family2
probereturnmodulefreebsdcallconnectprovidersyscallport1address146.115.8.117 00000000000092233720368547758087    localhost146.115.8.1170000000000005534023222112865500300000000000092233720368547758087ÈÞáÏúÝ³( 0000000000005534023222112865500300000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655002´
ü£ÈÞáÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865500200000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655005ºü£ÈÞáÏúÝ³(     err0family2
probereturnmodulefreebsdcallconnectprovidersyscallport1address146.115.8.91 00000000000092233720368547758088    localhost146.115.8.910000000000005534023222112865500500000000000092233720368547758088ÈÞáÏúÝ³( 0000000000005534023222112865500500000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655004¸
ü£ÈÞáÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865500400000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655007¾ü£ÈÞáÏúÝ³(     err0family2
probereturnmodulefreebsdcallconnectprovidersyscallport1address146.115.8.109 00000000000092233720368547758089    localhost146.115.8.1090000000000005534023222112865500700000000000092233720368547758089ÈÞáÏúÝ³( 0000000000005534023222112865500700000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655006¼
ü£ÈÞáÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865500600000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655009Âü£ÈÞáÏúÝ³(     err0family2
probereturnmodulefreebsdcallconnectprovidersyscallport1address146.115.8.121 00000000000092233720368547758090    localhost146.115.8.1210000000000005534023222112865500900000000000092233720368547758090ÈÞáÏúÝ³( 0000000000005534023222112865500900000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655008À
ü£ÈÞáÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865500800000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655011Æü£ÈÞáÏúÝ³(     err0family2
probereturnmodulefreebsdcallconnectprovidersyscallport1address146.115.8.93 00000000000092233720368547758091    localhost146.115.8.930000000000005534023222112865501100000000000092233720368547758091ÈÞáÏúÝ³( 0000000000005534023222112865501100000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655010Ä
ü£ÈÞáÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865501000000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655013Êü£ÈÞáÏúÝ³(     err0family2
probereturnmodulefreebsdcallconnectprovidersyscallport1address146.115.8.113 00000000000092233720368547758092    localhost146.115.8.1130000000000005534023222112865501300000000000092233720368547758092ÈÞáÏúÝ³( 0000000000005534023222112865501300000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655012È
ü£ÈÞáÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865501200000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655015Îü£ÈÞáÏúÝ³(     err0family2
probereturnmodulefreebsdcallconnectprovidersyscallport1address146.115.8.102 00000000000092233720368547758093    localhost146.115.8.1020000000000005534023222112865501500000000000092233720368547758093ÈÞáÏúÝ³( 0000000000005534023222112865501500000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655014Ì
ü£ÈÞáÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865501400000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655017Òü£ÈÞáÏúÝ³(     err0family2
probereturnmodulefreebsdcallconnectprovidersyscallport1address146.115.8.123 00000000000092233720368547758094    localhost146.115.8.1230000000000005534023222112865501700000000000092233720368547758094ÈÞáÏúÝ³( 0000000000005534023222112865501700000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655016Ð
ü£ÈÞáÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865501600000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655019Öü£ÈÞáÏúÝ³(     err0family2
probereturnmodulefreebsdcallconnectprovidersyscallport1address146.115.8.94 00000000000092233720368547758095    localhost146.115.8.940000000000005534023222112865501900000000000092233720368547758095ÈÞáÏúÝ³( 0000000000005534023222112865501900000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655018Ô
ü£ÈÞáÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865501800000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655021Úü£ÈÞáÏúÝ³(     err0family2
probereturnmodulefreebsdcallconnectprovidersyscallport1address146.115.8.79 00000000000092233720368547758096    localhost146.115.8.790000000000005534023222112865502100000000000092233720368547758096ÈÞáÏúÝ³( 0000000000005534023222112865502100000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655020Ø
ü£ÈÞáÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865502000000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655023Þü£ÈÞáÏúÝ³(     err0family2
probereturnmodulefreebsdcallconnectprovidersyscallport1address146.115.8.108 00000000000092233720368547758097    localhost146.115.8.1080000000000005534023222112865502300000000000092233720368547758097ÈÞáÏúÝ³( 0000000000005534023222112865502300000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655022Ü
ü£ÈÞáÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865502200000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655025âü£ÈÀ¦ÏúÝ³(     err0family2
probereturnmodulefreebsdcallconnectprovidersyscallport80address146.115.8.108 00000000000092233720368547758098    localhost146.115.8.108 0000000000005534023222112865502500000000000092233720368547758098ÈÀ¦ÏúÝ³( 0000000000005534023222112865502500000000000018446744073709552804ÈÀ¦ÏúÝ³( 00000000000055340232221128655027æ"ü£ô°áÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865502700000000000018446744073709552804ô°áÏúÝ³( 00000000000055340232221128655024à
ü£ÈÞáÏúÝ³(     
fd3
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865502400000000000018446744073709552804ÈÞáÏúÝ³( 00000000000055340232221128655029ê ü£ô°áÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720382921990modulefreebsdcallopenprovidersyscallpath./usr/share/zoneinfo/UTC 00000000000074665419466188391696    ./usr/share/zoneinfo/UTC  0000000000007466541946618839169600000000000055340232221128655029ô°áÏúÝ³( 0000000000005534023222112865502900000000000018446744073709552804ô°áÏúÝ³( 00000000000055340232221128655028è"ü£ô°áÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865502800000000000018446744073709552804ô°áÏúÝ³( 00000000000055340232221128655026ä&ü£ÈÀ¦ÏúÝ³(     
fd3
probe
entrycall
writemodulefreebsdprovidersyscall 0000000000005534023222112865502600000000000018446744073709552804ÈÀ¦ÏúÝ³( 00000000000055340232221128655033ò ü£ô°áÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720382921990modulefreebsdcallopenprovidersyscallpath</usr/share/zoneinfo/posixrules 0000000000008985880626387764526700000000000055340232221128655033ô°áÏúÝ³( 0000000000005534023222112865503300000000000018446744073709552804ô°áÏúÝ³( 00000000000055340232221128655031î"ü£ô°áÏúÝ³(     
fd4
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865503100000000000018446744073709552804ô°áÏúÝ³( 00000000000055340232221128655032ð
ü£ô°áÏúÝ³(     
fd4
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865503200000000000018446744073709552804ô°áÏúÝ³( 00000000000055340232221128655037ú ü£ô°áÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720382921990modulefreebsdcallopenprovidersyscallpathindex.html 00000000000090719974317362973539    index.html  0000000000009071997431736297353900000000000055340232221128655037ô°áÏúÝ³( 0000000000005534023222112865503700000000000018446744073709552804ô°áÏúÝ³( 00000000000055340232221128655039þ ü£ô°áÏúÝ³(     
probeentry:return*returnTimestampMicros&1455713720382921990modulefreebsdcallopenatprovidersyscallpath8/usr/local/lib/charset.alias 00000000000080455850815934074256    8/usr/local/lib/charset.alias  0000000000008045585081593407425600000000000055340232221128655039ô°áÏúÝ³( 0000000000005534023222112865503900000000000018446744073709552804ô°áÏúÝ³( 00000000000055340232221128655035ö"ü£ô°áÏúÝ³(     
fd4
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865503500000000000018446744073709552804ô°áÏúÝ³( 00000000000055340232221128655036ø
ü£ô°áÏúÝ³(     
fd4
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865503600000000000018446744073709552804ô°áÏúÝ³( 00000000000055340232221128655041"ü£ô°áÏúÝ³(     
fd5
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865504100000000000018446744073709552804ô°áÏúÝ³( 00000000000055340232221128655042"ü£ô°áÏúÝ³(     
fd5
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865504200000000000018446744073709552804ô°áÏúÝ³( 00000000000055340232221128655044"ü£ô°áÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865504400000000000018446744073709552804ô°áÏúÝ³( 00000000000055340232221128655045"ü£ô°áÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865504500000000000018446744073709552804ô°áÏúÝ³( 00000000000055340232221128655046&ü£¾ª¥âÏúÝ³(     
fd4
probe
entrycall
writemodulefreebsdprovidersyscall 0000000000005534023222112865504600000000000018446744073709552804¾ª¥âÏúÝ³( 00000000000055340232221128655043
ü£ô°áÏúÝ³(     
fd5
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865504300000000000018446744073709552804ô°áÏúÝ³( 00000000000055340232221128655047"ü£¾ª¥âÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865504700000000000018446744073709552804¾ª¥âÏúÝ³( 00000000000055340232221128655048&ü£¾ª¥âÏúÝ³(     
fd4
probe
entrycall
writemodulefreebsdprovidersyscall 0000000000005534023222112865504800000000000018446744073709552804¾ª¥âÏúÝ³( 00000000000055340232221128655049"ü£êãÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865504900000000000018446744073709552804êãÏúÝ³( 00000000000055340232221128655050&ü£êãÏúÝ³(     
fd4
probe
entrycall
writemodulefreebsdprovidersyscall 0000000000005534023222112865505000000000000018446744073709552804êãÏúÝ³( 00000000000055340232221128655051"ü£ò¬åÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865505100000000000018446744073709552804ò¬åÏúÝ³( 00000000000055340232221128655052&ü£ò¬åÏúÝ³(     
fd4
probe
entrycall
writemodulefreebsdprovidersyscall 0000000000005534023222112865505200000000000018446744073709552804ò¬åÏúÝ³( 00000000000055340232221128655053"ü£ÆÔõéÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865505300000000000018446744073709552804ÆÔõéÏúÝ³( 00000000000055340232221128655054&ü£ÆÔõéÏúÝ³(     
fd4
probe
entrycall
writemodulefreebsdprovidersyscall 0000000000005534023222112865505400000000000018446744073709552804ÆÔõéÏúÝ³( 00000000000055340232221128655055"ü£ÆÔõéÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865505500000000000018446744073709552804ÆÔõéÏúÝ³( 00000000000055340232221128655056 &ü£ÆÔõéÏúÝ³(     
fd4
probe
entrycall
writemodulefreebsdprovidersyscall 0000000000005534023222112865505600000000000018446744073709552804ÆÔõéÏúÝ³( 00000000000055340232221128655057¢"ü£ÌÓéëÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865505700000000000018446744073709552804ÌÓéëÏúÝ³( 00000000000055340232221128655058¤&ü£ÌÓéëÏúÝ³(     
fd4
probe
entrycall
writemodulefreebsdprovidersyscall 0000000000005534023222112865505800000000000018446744073709552804ÌÓéëÏúÝ³( 00000000000055340232221128655059¦"ü£ØäìÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865505900000000000018446744073709552804ØäìÏúÝ³( 00000000000055340232221128655060¨&ü£ØäìÏúÝ³(     
fd4
probe
entrycall
writemodulefreebsdprovidersyscall 0000000000005534023222112865506000000000000018446744073709552804ØäìÏúÝ³( 00000000000055340232221128655061ª"ü£úÑïÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865506100000000000018446744073709552804úÑïÏúÝ³( 00000000000055340232221128655062¬&ü£úÑïÏúÝ³(     
fd4
probe
entrycall
writemodulefreebsdprovidersyscall 0000000000005534023222112865506200000000000018446744073709552804úÑïÏúÝ³( 00000000000055340232221128655063®"ü£öÑðÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865506300000000000018446744073709552804öÑðÏúÝ³( 00000000000055340232221128655064°&ü£öÑðÏúÝ³(     
fd4
probe
entrycall
writemodulefreebsdprovidersyscall 0000000000005534023222112865506400000000000018446744073709552804öÑðÏúÝ³( 00000000000055340232221128655065²"ü£öÑðÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865506500000000000018446744073709552804öÑðÏúÝ³( 00000000000055340232221128655066´&ü£öÑðÏúÝ³(     
fd4
probe
entrycall
writemodulefreebsdprovidersyscall 0000000000005534023222112865506600000000000018446744073709552804öÑðÏúÝ³( 00000000000055340232221128655067¶"ü£Ú¯ÆñÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865506700000000000018446744073709552804Ú¯ÆñÏúÝ³( 00000000000055340232221128655069º"ü£Ú¯ÆñÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865506900000000000018446744073709552804Ú¯ÆñÏúÝ³( 00000000000055340232221128655070¼"ü£Ú¯ÆñÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865507000000000000018446744073709552804Ú¯ÆñÏúÝ³( 00000000000055340232221128655068¸&ü£Ú¯ÆñÏúÝ³(     
fd4
probe
entrycall
writemodulefreebsdprovidersyscall 0000000000005534023222112865506800000000000018446744073709552804Ú¯ÆñÏúÝ³( 00000000000055340232221128655073Â.ü£Ì¯õÏúÝ³(     
probe
entrycallexitmodulefreebsdprovidersyscall 0000000000005534023222112865507300000000000018446744073709552804Ì¯õÏúÝ³( 00000000000055340232221128655071¾"ü£Ú¯ÆñÏúÝ³(     
fd3
probe
entrycallreadmodulefreebsdprovidersyscall 0000000000005534023222112865507100000000000018446744073709552804Ú¯ÆñÏúÝ³( 00000000000055340232221128655072À
ü£Ú¯ÆñÏúÝ³(     
fd4
probe
entrycall
closemodulefreebsdprovidersyscall 0000000000005534023222112865507200000000000018446744073709552804Ú¯ÆñÏúÝ³( V´TäiÛçl¢ÜþKx